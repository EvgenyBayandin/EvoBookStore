services:
  postgres:
    image: postgres:16.3
    restart: always
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: EvoBookStore
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:8.11
    restart: always
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json
      - ./docker/pgadmin/pgpass:/pgadmin4/pgpass
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:80/misc/ping || exit -1
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
    entrypoint: /bin/sh -c "chmod 600 /pgadmin4/pgpass; /entrypoint.sh;"

  eureka:
    build: ./eureka
    ports:
      - 8761:8761

  gateway:
    build: ./gateway
    ports:
      - 8080:80

  person:
    build: ./person
    ports:
      - 8081:8081
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: root
      DB_PASSWORD: root
      DB_NAME: EvoBookStore
      DB_SCHEMA: person_${INSTANCE_ID}
    depends_on:
      - postgres

  product:
    build: ./product
    ports:
      - 8082:8082
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: root
      DB_PASSWORD: root
      DB_NAME: EvoBookStore
      DB_SCHEMA: product_${INSTANCE_ID}
    depends_on:
      - postgres

volumes:
  postgres_data:
  pgadmin_data:
